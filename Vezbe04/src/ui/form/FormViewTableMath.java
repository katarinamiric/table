/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.form;

import controller.Controller;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.util.List;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import ui.components.IViewData;
import ui.components.table.model.ProductTableModel;
import ui.components.validator.Validator;

/**
 *
 * @author student1
 */
public class FormViewTableMath extends javax.swing.JDialog implements IViewData {

    List<model.Math> maths = Controller.getInstance().getMaths();
    List<JDialog> views = Controller.getInstance().getViews();
    Validator validator;

    public FormViewTableMath(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        JDialog thisForm = this;
        setLocationRelativeTo(null);

        fillForm();
        Controller.getInstance().register(this);

        this.addWindowListener(new WindowListener() {
            @Override
            public void windowOpened(WindowEvent e) {
            }

            @Override
            public void windowClosing(WindowEvent e) {
                Controller.getInstance().removeView(thisForm);
                System.out.println("This dialog has been removed: " + thisForm);
            }

            @Override
            public void windowClosed(WindowEvent e) {
            }

            @Override
            public void windowIconified(WindowEvent e) {
            }

            @Override
            public void windowDeiconified(WindowEvent e) {
            }

            @Override
            public void windowActivated(WindowEvent e) {
            }

            @Override
            public void windowDeactivated(WindowEvent e) {
            }
        });

        jTblMaths.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                Controller.getInstance().select(jTblMaths.getSelectedRow());
            }
        }
        );

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTblMaths = new javax.swing.JTable();
        btnRemove = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("View-table");

        jTblMaths.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTblMaths);

        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 556, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(btnRemove)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRemove)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        int selectedRow = jTblMaths.getSelectedRow();
        System.out.println(selectedRow);
        int b = 0;
        if (maths.isEmpty()) {
            JOptionPane.showMessageDialog(null, "No items found!", "Message", HEIGHT);
        }
        for (model.Math math : maths) {
            if (b == selectedRow) {
                Controller.getInstance().remove(selectedRow);
                System.out.println(selectedRow);
                maths = Controller.getInstance().getMaths();
                fillForm();
                b = 0;
                break;
            } else {
                JOptionPane.showMessageDialog(null, "No item has been selected.", "Message", HEIGHT);
                System.out.println(selectedRow);
            }
            b++;
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

//    public boolean isSelected(){
////        jTblMaths.getSelectedRow();
////        jTblMaths.isRowSelected(ERROR);
////        jTblMaths.addFocusListener(l);
//        jTblMaths.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
//            @Override
//            public void valueChanged(ListSelectionEvent e) {
//                for (model.Math math : maths) {
//                    if()
//                }
//            }
//        });
//        return true;
//    }
    private void fillForm() {

        List<model.Math> maths = Controller.getInstance().getMaths();
        TableModel tm = new ProductTableModel(maths);
        jTblMaths.setModel(tm);

//        List<Manufacturer> manufacturers = Controller.getInstance().getAllManufacturers();
//        JComboBox comboManufacturers = new JComboBox(new DefaultComboBoxModel(manufacturers.toArray()));
//        TableColumn tc = jtblMaths.getColumnModel().getColumn(2);
//        tc.setCellEditor(new DefaultCellEditor(comboManufacturers));
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRemove;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTblMaths;
    // End of variables declaration//GEN-END:variables

    @Override
    public void refreshData() {
        fillForm();
    }

    @Override
    public void selectRow(int selected) {
            jTblMaths.setRowSelectionInterval(selected, selected);
    }

}
